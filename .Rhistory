lapply(1:300,sqrt)
library(datasets)
data("iris")
?iris
i<- split(iris, iris$Species )
i
colMeans(i$virginica)
?colMeans
colMeans(i$virginica, dims =1)
colMeans(i$virginica, dims =2)
colMeans(i[,"virginica"]
)
colMeans(i[,"virginica"])
colMeans(i["virginica"])
tapply(i,,mean)
tapply(iris, iris$Species, mean)
i
i$virginica
i$virginica$Sepal.Length
mean(i$virginica$Sepal.Length)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
?mtcars
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
?with
?mtcars
with(mtcars, tapply(mpg, hp, mean))
with(mtcars, tapply(hp, cyl, mean))
a<-with(mtcars, tapply(hp, cyl, mean))
a
a$4
a[1]
a[1,1]
a[1]-a[3]
debug(ls)
ls
n
next
ls
setwd("~/r_projects/r programming course/week_3/ProgrammingAssignment2")
source("cachematrix.R")
View(cacheSolve)
View(cacheSolve)
View(makeCacheMatrix)
View(makeCacheMatrix)
View(makeCacheMatrix)
View(makeCacheMatrix)
View(makeCacheMatrix)
View(makeCacheMatrix)
View(cacheSolve)
View(cacheSolve)
?<<-
<<-?
x<-5
get<-function() x
get(5)
get()
get<-function() x
get
get<-function(mean) x <-mean
get
?mean
z <- [1,2]
z <- [[1,2]]
z <- {1,2}
z<-c(1,2,3)
get<-function(mean) z <-mean
get
z
get(z)
z
get<-function(mean) x <-mean
get(z)
a<-matrix(c(9,2,3,4,5,6,7,8,9), ncol=3)
source("cachematrix.R")
a<-matrix(c(9,2,3,4,5,6,7,8,9), ncol=3)
x<makeCacheMatrix(a)
?list
